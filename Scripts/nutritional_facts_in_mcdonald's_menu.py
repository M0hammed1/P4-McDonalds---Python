# -*- coding: utf-8 -*-
"""Nutritional_facts_in_McDonald's_menu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fons6lek6RiIkHKiiRmlc9s2eIP-fQQZ

### Data Cleaning and Preparation
"""

# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
from IPython.display import display

from google.colab import drive
drive.mount("/content/drive")

# Load the dataset
df = pd.read_csv('/content/drive/MyDrive/Projects Py, SQL, PBI/Mine P4 McDonalds - Python/menu.csv') # Update the path to your dataset location

# Check for Null Values
null_check = df.isnull().sum()
print("Null Check Results:\n", null_check)

# Unique Values in Category Column
unique_categories = df['Category'].unique()
print("Unique Categories:\n", unique_categories)

"""### Data Visualization"""

# Assuming df is your DataFrame containing the 'Category' column
items_per_category = df['Category'].value_counts()

# Plotting
plt.figure(figsize=(10, 6))
items_per_category.plot(kind='bar', color='skyblue')
plt.title('Number of Items per Category')
plt.xlabel('Category')
plt.ylabel('Count')
plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

# Average Nutrient Analysis using Pivot Table and Styling
cols=['Vitamin A (% Daily Value)','Vitamin C (% Daily Value)','Calcium (% Daily Value)',
      'Iron (% Daily Value)','Total Fat (% Daily Value)',
      'Cholesterol (% Daily Value)','Carbohydrates (% Daily Value)']

table=df.pivot_table(columns='Category',values=cols)
table.style.background_gradient(cmap='viridis')

# Visualization: Scatter Plot Analysis of Carbohydrates vs Sugars
plt.style.use('ggplot')
plt.figure(figsize=(8,5), dpi=80)
sns.scatterplot(x='Carbohydrates', y='Sugars', data=df, alpha=0.8, s=60)
plt.title('Carbohydrates vs Sugars', x=0.5, y=1.05)
plt.show()

# Visualization: Scatter Plot with Plotly Express - Total Fat vs Cholesterol
fig = px.scatter(df, x="Total Fat (% Daily Value)", y='Cholesterol (% Daily Value)', color="Category",
                 size='Calories', hover_name="Item", trendline="ols",
                 template="plotly_dark", marginal_x="box", marginal_y="box")
fig.show()